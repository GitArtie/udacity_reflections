When would you want to use a remote repository rather than keeping all your work local?

- To make files available from everywhere for different machines.

- To share and collaborate with others.
- To have a secure copy on the web.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
- To keep an online backup.
- To keep traffic low.
- To not lose work due to unexpected updates.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
- A fork is a clone of a repository on GitHub. Use when you want to work on someone else's content.
- A clone is a copy of a repository. Use when you want to modify a repository locally or when you want to keep a backup of a repository.
- A branch is a series of commits. Use when adding a new feature or experimental change to a commit in your repository.

What is the benefit of having a copy of the last known state of the remote stored locally?
- You can work offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
- Having a common online storage where everyone can upload new file versions. Communication would need to happen on a different platform. Versioning would be a problem to think about.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
- To implement/test new features without effecting the working master branch. Collaboration is easier with branches because different people can work on single features each that are later incorporated into the master branch. The master could have changed until the feature is ready.